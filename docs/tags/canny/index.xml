<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Canny on MatLoverによるMatlab以外のブログ</title>
        <link>https://opqrstuvcut.github.io/blog/tags/canny/</link>
        <description>Recent content in Canny on MatLoverによるMatlab以外のブログ</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja-jp</language>
        <lastBuildDate>Mon, 03 Aug 2020 20:17:14 +0900</lastBuildDate><atom:link href="https://opqrstuvcut.github.io/blog/tags/canny/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Canny法でエッジ検出</title>
        <link>https://opqrstuvcut.github.io/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/</link>
        <pubDate>Mon, 03 Aug 2020 20:17:14 +0900</pubDate>
        
        <guid>https://opqrstuvcut.github.io/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/</guid>
        <description>&lt;img src="https://opqrstuvcut.github.io/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/5154e105157ba91bf3bf7306d1cfffe1.jpg" alt="Featured image of post Canny法でエッジ検出" /&gt;&lt;p&gt;本記事はQrunchからの転載です。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;エッジ検出の方法として、Canny法というものがあります。
SobelフィルタやLaplacianフィルタもエッジ検出ができるわけですが、Canny法を使うとより正確に輪郭を検出することが可能です。&lt;/p&gt;
&lt;h1 id=&#34;canny法の簡単な原理&#34;&gt;Canny法の簡単な原理&lt;/h1&gt;
&lt;h2 id=&#34;勾配の計算&#34;&gt;勾配の計算&lt;/h2&gt;
&lt;p&gt;Canny法では画像を平滑化したあとに、Sobelフィルタによって勾配を計算します。
OpenCVでは勾配の大きさは以下の2つのうちのどちらかで計算がなされます。$G_x$と$G_y$はそれぞれ$x$方向、$y$方向の勾配です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;2ノルムの場合
$$ \rm{grad}=\sqrt{G_x^2 + G_y^2}. $$&lt;/li&gt;
&lt;li&gt;1ノルムの場合
$$ \rm{grad}= |G_x| + |G_y|. $$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2ノルムのほうが正確ですが、計算量では1ノルムのほうが優れています。&lt;/p&gt;
&lt;h2 id=&#34;極大値を求める&#34;&gt;極大値を求める&lt;/h2&gt;
&lt;p&gt;次に、計算された勾配から、勾配の極大値を求めます。こうすることで、余計な箇所がエッジとして検出されるのを防ぎます。&lt;/p&gt;
&lt;h2 id=&#34;しきい値処理&#34;&gt;しきい値処理&lt;/h2&gt;
&lt;p&gt;最後に、しきい値処理でエッジとして扱うかどうかを決めます。
Canny法のしきい値は2つあり、1つはこの値より大きければエッジとすると決めるためのもの、もう1つはこの値よりも小さければエッジではないと決めるためのものです。
じゃあ2つのしきい値の間はどうなるの？という話ですが、隣接しているピクセルがエッジと判定されていれば、エッジと判定するようにし、そうでなければエッジではないと判定します。
単純なしきい値でのエッジの判定よりも、より柔軟ですね。&lt;/p&gt;
&lt;p&gt;ただし、しきい値が非常に重要になることが容易に想像できます。&lt;/p&gt;
&lt;h1 id=&#34;opencvでcanny法をためす&#34;&gt;OpenCVでCanny法をためす&lt;/h1&gt;
&lt;p&gt;Canny法は以下のようにして実行できます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;canny&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cv2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Canny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;threshold1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;threshold2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;apertureSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;L2gradient&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;threshold1がしきい値の小さい方で、threshold2がしきい値の大きい方です。apertureSizeにSobelフィルタのサイズを指定しています。また勾配の大きさに2ノルムを使う場合にはL2gradientをTrueにします。&lt;/p&gt;
&lt;p&gt;結果を以下に示します。&lt;/p&gt;
&lt;p&gt;　　　　元画像　　　　　　　　　　　canny（2ノルム）　　　　　　canny（1ノルム）
&lt;img src=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/8defd1c89359b1b8b5f6142e6e0105bf.jpg&#34;
	width=&#34;3024&#34;
	height=&#34;4032&#34;
	srcset=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/8defd1c89359b1b8b5f6142e6e0105bf_hu4da9fcbe4c523ba10cac3597857560ec_731304_480x0_resize_q75_box.jpg 480w, https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/8defd1c89359b1b8b5f6142e6e0105bf_hu4da9fcbe4c523ba10cac3597857560ec_731304_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;
&lt;img src=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/a0d7c2f605896b780afcc1f54a4acaad.jpg&#34;
	width=&#34;3024&#34;
	height=&#34;4032&#34;
	srcset=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/a0d7c2f605896b780afcc1f54a4acaad_hu33872c63859407da422741a8cad09db7_869622_480x0_resize_q75_box.jpg 480w, https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/a0d7c2f605896b780afcc1f54a4acaad_hu33872c63859407da422741a8cad09db7_869622_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;
&lt;img src=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/5154e105157ba91bf3bf7306d1cfffe1.jpg&#34;
	width=&#34;3024&#34;
	height=&#34;4032&#34;
	srcset=&#34;https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/5154e105157ba91bf3bf7306d1cfffe1_hud15ff8e0698fd4e8689d5fe3f1bbf41c_1046193_480x0_resize_q75_box.jpg 480w, https://opqrstuvcut.github.io/blog/blog/posts/canny%E6%B3%95%E3%81%A7%E3%82%A8%E3%83%83%E3%82%B8%E6%A4%9C%E5%87%BA/5154e105157ba91bf3bf7306d1cfffe1_hud15ff8e0698fd4e8689d5fe3f1bbf41c_1046193_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2ノルムのほうがきれいにエッジが取れている気がします。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
