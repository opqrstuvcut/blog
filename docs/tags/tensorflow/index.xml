<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TensorFlow on MatLoverによるMatlab以外のブログ</title>
    <link>https://opqrstuvcut.github.io/blog/tags/tensorflow/</link>
    <description>Recent content in TensorFlow on MatLoverによるMatlab以外のブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 18 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://opqrstuvcut.github.io/blog/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TensorBoardのDocker Image</title>
      <link>https://opqrstuvcut.github.io/blog/posts/00023/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/posts/00023/</guid>
      <description>たまにTensorBoardを使うときに、ホスト環境などにTensorBoardを入れるより、それ用のコンテナをたてたくなったので、そのメモです。
Docker Imageは以下のとおり。
FROM python:3.8 RUN pip install tensorflow WORKDIR /logs ENTRYPOINT [&amp;quot;tensorboard&amp;quot;, &amp;quot;--logdir&amp;quot;, &amp;quot;/logs&amp;quot;, &amp;quot;--host&amp;quot;, &amp;quot;0.0.0.0&amp;quot;] 次のような感じでdocker buildとdocker runします。
$ docker build -t tensorboard . $ docker run -it --rm -p 10000:6006 -v $PWD/logs:/logs tensorboard -vに指定するhost側のlogのディレクトリのパスと-pに指定するportは適当に変更する。</description>
    </item>
    
    <item>
      <title>GPUサーバーでのTensorFlow &#43; uWSGIでFailed to get device properties, error code: 3</title>
      <link>https://opqrstuvcut.github.io/blog/posts/00022/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/posts/00022/</guid>
      <description>GPUサーバー上でTensorFlowを動かすアプリを作成し、nginxとの間にはuWSGIを挟む構成にしていたところ、次のエラーが出てしまいました。
Failed to get device properties, error code: 3 他の記事の引用になってしまいますが、エラーメッセージ自体をググっても解決できなかったので、メモ程度に載せておきます。
原因 確かとは断言できないのですが、次の記事にかかれていることが怪しいと推測しました。 https://keng000.hatenablog.com/entry/2020/05/05/092425
つまり、マルチスレッドでのモデルの読み込み方が良くないのかと。
対処 記事に書かれている通り、uWSGIのiniファイルで次のように追記しました。
[uwsgi] lazy-apps = true とりあえずこれで解決しました。</description>
    </item>
    
  </channel>
</rss>
