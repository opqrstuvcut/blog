<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on MatLoverによるMatlab以外のブログ</title>
    <link>https://opqrstuvcut.github.io/blog/categories/aws/</link>
    <description>Recent content in AWS on MatLoverによるMatlab以外のブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2024 </copyright>
    <lastBuildDate>Thu, 25 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://opqrstuvcut.github.io/blog/categories/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>App Runnerを実戦投入してのメモ</title>
      <link>https://opqrstuvcut.github.io/blog/post/00075/</link>
      <pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00075/</guid>
      <description>簡単にAPIサーバーを用意する方法としてGCPではCloud Run、AWSではApp Runnerが挙げられると思います。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opqrstuvcut.github.io/blog/post/00075/feature.png" />
    </item>
    
    <item>
      <title>docker composeでAWS ECSにデプロイするときのtips</title>
      <link>https://opqrstuvcut.github.io/blog/post/00074/</link>
      <pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00074/</guid>
      <description>docker composeを使ってAWSのECSにアプリをデプロイ可能ですが、もしかすると役立つものがあるかもしれないのでメモを残しておきます。 作業したのが半年前なので少し情報が古いかもしれないのです。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opqrstuvcut.github.io/blog/post/00074/feature.png" />
    </item>
    
    <item>
      <title>FastAPI &#43; uvicornの構成のサーバーで時間経過でメモリ使用量が増えるとき</title>
      <link>https://opqrstuvcut.github.io/blog/post/00069/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00069/</guid>
      <description>問題発生時の状況 # AWSのECS上にFastAPI + uvicornの構成でのサーバーをたてました。内容的には普通のREST APIです。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opqrstuvcut.github.io/blog/post/00069/feature.png" />
    </item>
    
    <item>
      <title>AWSのDead Letter QueueのメッセージをもとのQueueに戻す</title>
      <link>https://opqrstuvcut.github.io/blog/post/00065/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00065/</guid>
      <description>AWSのSQSを使うときにちょっと困るのが、アプリの不具合等でDead Letter Queueに送られたメッセージをもとのQueueに戻したいケースです。 調べた感じでは、通常のAWS CLIでは簡単にはできなさそうです。</description>
      
    </item>
    
    <item>
      <title>AWSのLambdaからPostgresを利用</title>
      <link>https://opqrstuvcut.github.io/blog/post/00019/</link>
      <pubDate>Mon, 04 May 2020 13:35:16 +0900</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00019/</guid>
      <description>本記事はQrunchからの転載です。</description>
      
    </item>
    
    <item>
      <title>FlutterでS3にファイルをアップロードする</title>
      <link>https://opqrstuvcut.github.io/blog/post/00020/</link>
      <pubDate>Sun, 08 Dec 2019 19:04:32 +0900</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00020/</guid>
      <description>本記事はQrunchからの転載です。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opqrstuvcut.github.io/blog/post/00020/feature.png" />
    </item>
    
    <item>
      <title>MinIOでローカルにS3みたいなものを作って開発する</title>
      <link>https://opqrstuvcut.github.io/blog/post/00013/</link>
      <pubDate>Sat, 09 Nov 2019 12:48:01 +0900</pubDate>
      
      <guid>https://opqrstuvcut.github.io/blog/post/00013/</guid>
      <description>本記事はQrunchからの転載です。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opqrstuvcut.github.io/blog/post/00013/feature.png" />
    </item>
    
  </channel>
</rss>
